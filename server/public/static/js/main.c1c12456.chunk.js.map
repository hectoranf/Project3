{"version":3,"sources":["service/meeting.service.js","components/Meeting.js","components/App.js","index.js"],"names":["services","getAllMeetings","service","get","getByTitle","title","this","axios","create","baseURL","process","withCredentials","Meeting","meetingService","then","response","setState","meetings","data","catch","err","console","log","componentDidMount","state","MeetingService","map","elm","key","_id","media","Component","App","ReactDOM","render","document","getElementById"],"mappings":"iQAEqBA,EACjB,aAAe,IAAD,gCAOdC,eAAiB,kBAAM,EAAKC,QAAQC,IAAI,oBAP1B,KAQdC,WAAa,SAAAC,GAAK,OAAI,EAAKH,QAAQC,IAAb,+BAAyCE,KAP3DC,KAAKJ,QAAUK,IAAMC,OAAO,CACxBC,QAAQ,GAAD,OAAKC,yCACZC,iBAAiB,KCoCdC,E,kDArCX,aAAe,IAAD,8BACV,gBAOJX,eAAiB,WACb,EAAKY,eAAeZ,iBACfa,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEC,SAAUF,EAASG,UACpDC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAXpB,EAcdhB,WAAa,SAACC,GACV,EAAKQ,eAAeT,WAAWC,GAC1BS,MAAK,SAAAC,GAAQ,OAAI,EAAKC,SAAS,CAAEC,SAAUF,EAASG,UACpDC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAjBpB,EAoBdG,kBAAoB,WAChB,EAAKnB,WAAW,UAnBhB,EAAKoB,MAAQ,CACTP,SAAU,IAEd,EAAKJ,eAAiB,IAAIY,EALhB,E,qDAyBV,OACI,oCACI,+DACA,4BACKnB,KAAKkB,MAAMP,SAASS,KAAI,SAAAC,GAAG,OAAI,wBAAIC,IAAKD,EAAIE,KAAMF,EAAIG,MAAMzB,gB,GA/B3D0B,aCuBPC,E,kDAhBb,aAAe,IAAD,8BACZ,gBACKR,MAAQ,GAFD,E,qDAOZ,OACE,oCACE,oCACA,kBAAC,EAAD,W,GAZUO,a,QCFlBE,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.c1c12456.chunk.js","sourcesContent":["import axios from 'axios'\n\nexport default class services {\n    constructor() {\n        this.service = axios.create({\n            baseURL: `${process.env.REACT_APP_API_URL}`,\n            withCredentials: true\n        })\n    }\n\n    getAllMeetings = () => this.service.get('/meeting/getAll')\n    getByTitle = title => this.service.get(`/meeting/media?title=${title}`)\n}","import React, { Component } from 'react'\nimport MeetingService from './../service/meeting.service'\n\nclass Meeting extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            meetings: []\n        }\n        this.meetingService = new MeetingService()\n    }\n\n    getAllMeetings = () => {\n        this.meetingService.getAllMeetings()\n            .then(response => this.setState({ meetings: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    getByTitle = (title) => {\n        this.meetingService.getByTitle(title)\n            .then(response => this.setState({ meetings: response.data }))\n            .catch(err => console.log(err))\n    }\n\n    componentDidMount = () => {\n        this.getByTitle('the f')\n    }\n\n    render() {\n        return (\n            <>\n                <h1>Los meetings para ver The Flash</h1>\n                <ul>\n                    {this.state.meetings.map(elm => <li key={elm._id}>{elm.media.title}</li>)}\n                </ul>\n            </>\n        )\n    }\n\n}\n\nexport default Meeting","import React, { Component } from 'react'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css'\n\n// import AuthService from './../service/auth.service'\nimport Meeting from './Meeting'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {}\n  }\n\n  render() {\n\n    return (\n      <>\n        <h1>Hola</h1>\n        <Meeting />\n      </>\n    )\n  }\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}